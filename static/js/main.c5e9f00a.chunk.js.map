{"version":3,"sources":["Card/index.js","List/hlp.js","assets/search.png","List/index.js","index.js","store.js"],"names":["Card","string","undefined","charAt","toUpperCase","slice","this","props","title","text","author","className","capitalizeFirstLetter","React","isNull","value","List","state","inputValue","getAuthorById","id","users","store","length","filter","user","name","showCard","toLowerCase","includes","toLocaleLowerCase","renderCards","posts","map","item","userId","body","onInputChange","ev","setState","target","src","search","alt","type","placeholder","onChange","observer","setUsers","setPosts","makeObservable","action","observable","init","fetch","then","resp","ok","Error","status","json","fetchPosts","fetchUsers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e9f00a.chunk.js","sourcesContent":["import * as React from 'react'\nimport './styles.scss'\n\n\nexport default class Card extends React.Component {\n\n  capitalizeFirstLetter(string) {\n    if(string === undefined) return ''\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  render(){\n\n    const {title, text, author} = this.props\n\n    return (\n      <div className='card'>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.capitalizeFirstLetter(title)}</h5>\n            <p className=\"card-text\">{this.capitalizeFirstLetter(text)}</p>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{author}</h6>\n        </div>\n      </div>\n    )\n  }\n\n}","export function isNull(value){\n  return value === null\n}\n","export default __webpack_public_path__ + \"static/media/search.832e2a4a.png\";","import * as React from 'react'\nimport { observer } from 'mobx-react'\n\nimport Card from '../Card'\nimport { isNull } from './hlp'\nimport search from '../assets/search.png'\n\nimport './styles.scss'\n\n\n class List extends React.Component {\n  state = {\n    inputValue:'',\n  }\n\n  getAuthorById = (id) => {\n    const { store } = this.props\n    const {users} = store\n    if( users.length === 0 ) return null\n\n    const author = users.filter((user) => user.id === id)[0]?.name \n    return isNull(author) ? null : author\n  }\n\n  showCard = (author) => {\n    const {inputValue} = this.state\n    return inputValue === '' || author.toLowerCase().includes(inputValue.toLocaleLowerCase())\n  }\n\n  renderCards = () => {\n    const { store } = this.props\n    const { posts } = store\n    if ( posts.length === 0 ) return null\n\n    return posts.map((item) => {\n      const author = this.getAuthorById(item.userId)\n      if(isNull(author)) return null\n\n    return this.showCard(author) ?\n      <Card text={item.body} title={item.title} author={author} key={item.id}/>\n      : null\n    })\n  }\n\n  onInputChange = (ev) => {\n    this.setState({inputValue:ev.target.value})\n  }\n\n  render(){\n\n    return (\n      <>\n        <div className='inputWrapper' >\n          <div className='input-group'>\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\"><img src={search} alt=\"Logo\" /></span>\n            </div>\n            <input \n              type=\"search\" \n              className=\"form-control\"\n              placeholder=\"Filter by author...\" \n              aria-label=\"Search\"\n              aria-describedby=\"search-addon\" \n              onChange={this.onInputChange}\n              value = {this.state.inputValue}\n            />\n          </div>\n        </div>\n        \n        <div className='container d-flex flex-wrap'>\n            {this.renderCards()}\n        </div>\n      </>\n    )\n  }\n\n}\n\nexport default ( observer( List ) )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport './index.css';\nimport List from './List';\nimport Store from './store'\n\n\nconst store = new Store()\n\nReactDOM.render(\n  <React.StrictMode>\n    <List store={store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { action, makeObservable, observable } from 'mobx'\n\nexport default class Store {\n\n  posts = []\n  users = []\n\n  constructor( ) {\n    makeObservable( this, {\n      setUsers: action,\n      setPosts: action,\n      posts: observable,\n      users: observable\n    } )\n\n    this.init()\n  }\n\n  fetchUsers(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((resp) => {\n      if(!resp.ok) {\n        throw new Error(resp.status)\n      }\n     return resp.json()\n    }).then((json) => {\n      this.setUsers(json)\n    })\n  }\n\n  fetchPosts(){\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((resp) => {\n      if(!resp.ok) {\n        throw new Error(resp.status)\n      }\n     return resp.json()\n    }).then((json) => {\n      this.setPosts(json)\n    })\n  }\n\n  setUsers = (users) => {\n    this.users = users\n  }\n\n  setPosts = (posts) => {\n    this.posts = posts\n  }\n\n  init(){\n    this.fetchPosts()\n    this.fetchUsers()\n  }\n\n}"],"sourceRoot":""}